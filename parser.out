Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression AND expression
Rule 2     expression -> expression OOR expression
Rule 3     expression -> expression IMP expression
Rule 4     expression -> expression IMD expression
Rule 5     expression -> NEG expression
Rule 6     expression -> LPR expression RPR
Rule 7     expression -> VAR
Rule 8     empty -> <empty>

Terminals, with rules where they appear

AND                  : 1
IMD                  : 4
IMP                  : 3
LPR                  : 6
NEG                  : 5
OOR                  : 2
RPR                  : 6
VAR                  : 7
error                : 

Nonterminals, with rules where they appear

empty                : 
expression           : 1 1 2 2 3 3 4 4 5 6 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8


state 2

    (5) expression -> NEG . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 9

state 3

    (6) expression -> LPR . expression RPR
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 10

state 4

    (7) expression -> VAR .

    AND             reduce using rule 7 (expression -> VAR .)
    OOR             reduce using rule 7 (expression -> VAR .)
    IMP             reduce using rule 7 (expression -> VAR .)
    IMD             reduce using rule 7 (expression -> VAR .)
    $end            reduce using rule 7 (expression -> VAR .)
    RPR             reduce using rule 7 (expression -> VAR .)


state 5

    (1) expression -> expression AND . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 11

state 6

    (2) expression -> expression OOR . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 12

state 7

    (3) expression -> expression IMP . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 13

state 8

    (4) expression -> expression IMD . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OOR expression
    (3) expression -> . expression IMP expression
    (4) expression -> . expression IMD expression
    (5) expression -> . NEG expression
    (6) expression -> . LPR expression RPR
    (7) expression -> . VAR

    NEG             shift and go to state 2
    LPR             shift and go to state 3
    VAR             shift and go to state 4

    expression                     shift and go to state 14

state 9

    (5) expression -> NEG expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OOR resolved as shift
  ! shift/reduce conflict for IMP resolved as shift
  ! shift/reduce conflict for IMD resolved as shift
    $end            reduce using rule 5 (expression -> NEG expression .)
    RPR             reduce using rule 5 (expression -> NEG expression .)
    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8

  ! AND             [ reduce using rule 5 (expression -> NEG expression .) ]
  ! OOR             [ reduce using rule 5 (expression -> NEG expression .) ]
  ! IMP             [ reduce using rule 5 (expression -> NEG expression .) ]
  ! IMD             [ reduce using rule 5 (expression -> NEG expression .) ]


state 10

    (6) expression -> LPR expression . RPR
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

    RPR             shift and go to state 15
    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8


state 11

    (1) expression -> expression AND expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OOR resolved as shift
  ! shift/reduce conflict for IMP resolved as shift
  ! shift/reduce conflict for IMD resolved as shift
    $end            reduce using rule 1 (expression -> expression AND expression .)
    RPR             reduce using rule 1 (expression -> expression AND expression .)
    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8

  ! AND             [ reduce using rule 1 (expression -> expression AND expression .) ]
  ! OOR             [ reduce using rule 1 (expression -> expression AND expression .) ]
  ! IMP             [ reduce using rule 1 (expression -> expression AND expression .) ]
  ! IMD             [ reduce using rule 1 (expression -> expression AND expression .) ]


state 12

    (2) expression -> expression OOR expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OOR resolved as shift
  ! shift/reduce conflict for IMP resolved as shift
  ! shift/reduce conflict for IMD resolved as shift
    $end            reduce using rule 2 (expression -> expression OOR expression .)
    RPR             reduce using rule 2 (expression -> expression OOR expression .)
    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8

  ! AND             [ reduce using rule 2 (expression -> expression OOR expression .) ]
  ! OOR             [ reduce using rule 2 (expression -> expression OOR expression .) ]
  ! IMP             [ reduce using rule 2 (expression -> expression OOR expression .) ]
  ! IMD             [ reduce using rule 2 (expression -> expression OOR expression .) ]


state 13

    (3) expression -> expression IMP expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OOR resolved as shift
  ! shift/reduce conflict for IMP resolved as shift
  ! shift/reduce conflict for IMD resolved as shift
    $end            reduce using rule 3 (expression -> expression IMP expression .)
    RPR             reduce using rule 3 (expression -> expression IMP expression .)
    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8

  ! AND             [ reduce using rule 3 (expression -> expression IMP expression .) ]
  ! OOR             [ reduce using rule 3 (expression -> expression IMP expression .) ]
  ! IMP             [ reduce using rule 3 (expression -> expression IMP expression .) ]
  ! IMD             [ reduce using rule 3 (expression -> expression IMP expression .) ]


state 14

    (4) expression -> expression IMD expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OOR expression
    (3) expression -> expression . IMP expression
    (4) expression -> expression . IMD expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OOR resolved as shift
  ! shift/reduce conflict for IMP resolved as shift
  ! shift/reduce conflict for IMD resolved as shift
    $end            reduce using rule 4 (expression -> expression IMD expression .)
    RPR             reduce using rule 4 (expression -> expression IMD expression .)
    AND             shift and go to state 5
    OOR             shift and go to state 6
    IMP             shift and go to state 7
    IMD             shift and go to state 8

  ! AND             [ reduce using rule 4 (expression -> expression IMD expression .) ]
  ! OOR             [ reduce using rule 4 (expression -> expression IMD expression .) ]
  ! IMP             [ reduce using rule 4 (expression -> expression IMD expression .) ]
  ! IMD             [ reduce using rule 4 (expression -> expression IMD expression .) ]


state 15

    (6) expression -> LPR expression RPR .

    AND             reduce using rule 6 (expression -> LPR expression RPR .)
    OOR             reduce using rule 6 (expression -> LPR expression RPR .)
    IMP             reduce using rule 6 (expression -> LPR expression RPR .)
    IMD             reduce using rule 6 (expression -> LPR expression RPR .)
    $end            reduce using rule 6 (expression -> LPR expression RPR .)
    RPR             reduce using rule 6 (expression -> LPR expression RPR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 9 resolved as shift
WARNING: shift/reduce conflict for OOR in state 9 resolved as shift
WARNING: shift/reduce conflict for IMP in state 9 resolved as shift
WARNING: shift/reduce conflict for IMD in state 9 resolved as shift
WARNING: shift/reduce conflict for AND in state 11 resolved as shift
WARNING: shift/reduce conflict for OOR in state 11 resolved as shift
WARNING: shift/reduce conflict for IMP in state 11 resolved as shift
WARNING: shift/reduce conflict for IMD in state 11 resolved as shift
WARNING: shift/reduce conflict for AND in state 12 resolved as shift
WARNING: shift/reduce conflict for OOR in state 12 resolved as shift
WARNING: shift/reduce conflict for IMP in state 12 resolved as shift
WARNING: shift/reduce conflict for IMD in state 12 resolved as shift
WARNING: shift/reduce conflict for AND in state 13 resolved as shift
WARNING: shift/reduce conflict for OOR in state 13 resolved as shift
WARNING: shift/reduce conflict for IMP in state 13 resolved as shift
WARNING: shift/reduce conflict for IMD in state 13 resolved as shift
WARNING: shift/reduce conflict for AND in state 14 resolved as shift
WARNING: shift/reduce conflict for OOR in state 14 resolved as shift
WARNING: shift/reduce conflict for IMP in state 14 resolved as shift
WARNING: shift/reduce conflict for IMD in state 14 resolved as shift
